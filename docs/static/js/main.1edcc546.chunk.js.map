{"version":3,"sources":["componente/AddCategory.js","helpers/getGifs.js","componente/GifGridItem.js","componente/GifGrid.js","hooks/useFetchGifs.js","componente/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catego","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAOC,SATU,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAM,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAhBa,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAqB9BZ,EAAYe,UAAW,CACnBd,cAAee,IAAUC,KAAKC,Y,mCC9BrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETC,EAFS,iDAEsCC,UAAUH,GAFhD,+DAGII,MAAOF,GAHX,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT3B,kBAYTM,GAZS,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAEvB,ECHyB,SAACA,GAC1B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAXAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAM,SAAAC,GACJH,EAAS,CACJf,KAAWkB,EACXL,SAAW,SAIrB,CAAEpB,IAEGqB,EDb0BK,CAAa1B,GAAjCa,EAAb,EAAON,KAAea,EAAtB,EAAsBA,QAEtB,OACI,qCACI,qBAAIJ,UAAW,6CAAf,cAAgEhB,EAAhE,OACCoB,GAAW,mBAAGJ,UAAU,wCAAb,oBACZ,qBAAKA,UAAW,YAAhB,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZxBgB,EAAe,WAExB,MAAoC7C,mBAAU,CAAC,oBAA/C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAQA,OACI,qCACI,gDACA,uBACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACIA,SAAWA,GACLA,Y,MCnBlC6B,IAASC,OACJ,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1edcc546.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange =(e)=>{\r\n       setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2 ){\r\n            setCategories(catego => [inputValue, ...catego ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form  onSubmit={ handleSubmit }>\r\n            <input  \r\n                type=\"text\"\r\n                value= {inputValue}\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n            \r\n    )\r\n}\r\nAddCategory.prototype ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n        \r\n        const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Qlmkh7eH7HPVz9TiEKM75o7FCayFhFs6`;\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n        const gifs = data.map(img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n       return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React  from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n    \r\n    const {data: images , loading} = useFetchGifs(category);\r\n   \r\n    return (\r\n        <>\r\n            <h3 className= \"card animate__animated animate__fadeInDown\" > { category } </h3>\r\n            {loading && <p className=\"card animate__animated animate__flash\">Loagin</p> } \r\n            <div className= \"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem  \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport  const  useFetchGifs =(category)=> {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect( () =>{\r\n        getGifs(category)\r\n        .then( imgs=> {\r\n           setstate({\r\n                data:      imgs,\r\n                loading:   false\r\n           })\r\n            \r\n        })\r\n    },[ category ])\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState (['One - Punch Man']);\r\n    /**\r\n     * const handleAdd =()=>{\r\n        Las dos son formas de agregar elementos a un arreglo\r\n        setCategories( ['HunterXHunter', ...categories]);\r\n        setCategories(catego => [...catego, 'HunterXHunter']);\r\n    }* \r\n     */\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <hr></hr>\r\n            <AddCategory setCategories= {setCategories} />\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category =>(\r\n                        <GifGrid\r\n                            category={ category }\r\n                            key={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  { GifExpertApp }  from './componente/GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n     <GifExpertApp />,\n     document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}